{"ast":null,"code":"import _slicedToArray from \"C:/Users/Jo\\xE3o Marcelo/Documents/GitHub/Site-EngComp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition(_ref) {\n  var inProp = _ref.in,\n      onTransition = _ref.onTransition;\n  var ref = useRef(null);\n  var isInitialRef = useRef(true);\n  var handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(function () {\n    if (!ref.current) {\n      return undefined;\n    }\n\n    var stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: function isStale() {\n        return stale;\n      }\n    });\n    return function () {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(function () {\n    isInitialRef.current = false; // this is for strict mode\n\n    return function () {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\r\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\r\n *\r\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\r\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\r\n */\n\nexport default function ImperativeTransition(_ref2) {\n  var children = _ref2.children,\n      inProp = _ref2.in,\n      onExited = _ref2.onExited,\n      onEntered = _ref2.onEntered,\n      transition = _ref2.transition;\n\n  var _useState = useState(!inProp),\n      _useState2 = _slicedToArray(_useState, 2),\n      exited = _useState2[0],\n      setExited = _useState2[1]; // TODO: I think this needs to be in an effect\n\n\n  if (inProp && exited) {\n    setExited(false);\n  }\n\n  var ref = useTransition({\n    in: !!inProp,\n    onTransition: function onTransition(options) {\n      var onFinish = function onFinish() {\n        if (options.isStale()) return;\n\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n\n      Promise.resolve(transition(options)).then(onFinish, function (error) {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  var combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","map":{"version":3,"sources":["C:/Users/JoÃ£o Marcelo/Documents/GitHub/Site-EngComp/node_modules/@restart/ui/esm/ImperativeTransition.js"],"names":["useMergedRefs","useEventCallback","useIsomorphicEffect","React","useRef","cloneElement","useState","NoopTransition","jsx","_jsx","useTransition","inProp","in","onTransition","ref","isInitialRef","handleTransition","current","undefined","stale","element","initial","isStale","ImperativeTransition","children","onExited","onEntered","transition","exited","setExited","options","onFinish","Promise","resolve","then","error","combinedRef","renderTransition","Component","runTransition","props","Object","assign"],"mappings":"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","sourcesContent":["import useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\r\nimport React, { useRef, cloneElement, useState } from 'react';\r\nimport NoopTransition from './NoopTransition';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport function useTransition({\r\n  in: inProp,\r\n  onTransition\r\n}) {\r\n  const ref = useRef(null);\r\n  const isInitialRef = useRef(true);\r\n  const handleTransition = useEventCallback(onTransition);\r\n  useIsomorphicEffect(() => {\r\n    if (!ref.current) {\r\n      return undefined;\r\n    }\r\n    let stale = false;\r\n    handleTransition({\r\n      in: inProp,\r\n      element: ref.current,\r\n      initial: isInitialRef.current,\r\n      isStale: () => stale\r\n    });\r\n    return () => {\r\n      stale = true;\r\n    };\r\n  }, [inProp, handleTransition]);\r\n  useIsomorphicEffect(() => {\r\n    isInitialRef.current = false;\r\n    // this is for strict mode\r\n    return () => {\r\n      isInitialRef.current = true;\r\n    };\r\n  }, []);\r\n  return ref;\r\n}\r\n/**\r\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\r\n *\r\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\r\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\r\n */\r\nexport default function ImperativeTransition({\r\n  children,\r\n  in: inProp,\r\n  onExited,\r\n  onEntered,\r\n  transition\r\n}) {\r\n  const [exited, setExited] = useState(!inProp);\r\n\r\n  // TODO: I think this needs to be in an effect\r\n  if (inProp && exited) {\r\n    setExited(false);\r\n  }\r\n  const ref = useTransition({\r\n    in: !!inProp,\r\n    onTransition: options => {\r\n      const onFinish = () => {\r\n        if (options.isStale()) return;\r\n        if (options.in) {\r\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\r\n        } else {\r\n          setExited(true);\r\n          onExited == null ? void 0 : onExited(options.element);\r\n        }\r\n      };\r\n      Promise.resolve(transition(options)).then(onFinish, error => {\r\n        if (!options.in) setExited(true);\r\n        throw error;\r\n      });\r\n    }\r\n  });\r\n  const combinedRef = useMergedRefs(ref, children.ref);\r\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\r\n    ref: combinedRef\r\n  });\r\n}\r\nexport function renderTransition(Component, runTransition, props) {\r\n  if (Component) {\r\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\r\n  }\r\n  if (runTransition) {\r\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\r\n      transition: runTransition\r\n    }));\r\n  }\r\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\r\n}"]},"metadata":{},"sourceType":"module"}