{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","map":{"version":3,"sources":["C:/Users/MICROSOFT/important/saecomp/Site-EngComp/node_modules/react-bootstrap/esm/Row.js"],"names":["classNames","React","useBootstrapPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","jsx","_jsx","Row","forwardRef","bsPrefix","className","as","Component","props","ref","decoratedBsPrefix","breakpoints","minBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,EAAsDC,yBAAtD,QAAuF,iBAAvF;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,GAAG,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,CAAC;AACzCC,EAAAA,QADyC;AAEzCC,EAAAA,SAFyC;AAGzC;AACAC,EAAAA,EAAE,EAAEC,SAAS,GAAG,KAJyB;AAKzC,KAAGC;AALsC,CAAD,EAMvCC,GANuC,KAM/B;AACT,QAAMC,iBAAiB,GAAGb,kBAAkB,CAACO,QAAD,EAAW,KAAX,CAA5C;AACA,QAAMO,WAAW,GAAGb,uBAAuB,EAA3C;AACA,QAAMc,aAAa,GAAGb,yBAAyB,EAA/C;AACA,QAAMc,UAAU,GAAI,GAAEH,iBAAkB,OAAxC;AACA,QAAMI,OAAO,GAAG,EAAhB;AACAH,EAAAA,WAAW,CAACI,OAAZ,CAAoBC,QAAQ,IAAI;AAC9B,UAAMC,SAAS,GAAGT,KAAK,CAACQ,QAAD,CAAvB;AACA,WAAOR,KAAK,CAACQ,QAAD,CAAZ;AACA,QAAIE,IAAJ;;AACA,QAAID,SAAS,IAAI,IAAb,IAAqB,OAAOA,SAAP,KAAqB,QAA9C,EAAwD;AACtD,OAAC;AACCC,QAAAA;AADD,UAEGD,SAFJ;AAGD,KAJD,MAIO;AACLC,MAAAA,IAAI,GAAGD,SAAP;AACD;;AACD,UAAME,KAAK,GAAGH,QAAQ,KAAKJ,aAAb,GAA8B,IAAGI,QAAS,EAA1C,GAA8C,EAA5D;AACA,QAAIE,IAAI,IAAI,IAAZ,EAAkBJ,OAAO,CAACM,IAAR,CAAc,GAAEP,UAAW,GAAEM,KAAM,IAAGD,IAAK,EAA3C;AACnB,GAbD;AAcA,SAAO,aAAajB,IAAI,CAACM,SAAD,EAAY;AAClCE,IAAAA,GAAG,EAAEA,GAD6B;AAElC,OAAGD,KAF+B;AAGlCH,IAAAA,SAAS,EAAEV,UAAU,CAACU,SAAD,EAAYK,iBAAZ,EAA+B,GAAGI,OAAlC;AAHa,GAAZ,CAAxB;AAKD,CA/BwB,CAAzB;AAgCAZ,GAAG,CAACmB,WAAJ,GAAkB,KAAlB;AACA,eAAenB,GAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst Row = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = 'div',\r\n  ...props\r\n}, ref) => {\r\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\r\n  const breakpoints = useBootstrapBreakpoints();\r\n  const minBreakpoint = useBootstrapMinBreakpoint();\r\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\r\n  const classes = [];\r\n  breakpoints.forEach(brkPoint => {\r\n    const propValue = props[brkPoint];\r\n    delete props[brkPoint];\r\n    let cols;\r\n    if (propValue != null && typeof propValue === 'object') {\r\n      ({\r\n        cols\r\n      } = propValue);\r\n    } else {\r\n      cols = propValue;\r\n    }\r\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\r\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\r\n  });\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    ref: ref,\r\n    ...props,\r\n    className: classNames(className, decoratedBsPrefix, ...classes)\r\n  });\r\n});\r\nRow.displayName = 'Row';\r\nexport default Row;"]},"metadata":{},"sourceType":"module"}