{"ast":null,"code":"import classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start',\n  renderStaticNode: false\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n  responsive,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", { ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","map":{"version":3,"sources":["C:/Users/MICROSOFT/important/saecomp/Site-EngComp/node_modules/react-bootstrap/esm/Offcanvas.js"],"names":["classNames","useBreakpoint","useEventCallback","React","useCallback","useContext","useEffect","useMemo","useRef","useState","BaseModal","Fade","OffcanvasBody","OffcanvasToggling","ModalContext","NavbarContext","OffcanvasHeader","OffcanvasTitle","useBootstrapPrefix","BootstrapModalManager","getSharedManager","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","defaultProps","show","backdrop","keyboard","scroll","autoFocus","enforceFocus","restoreFocus","placement","renderStaticNode","DialogTransition","props","BackdropTransition","Offcanvas","forwardRef","bsPrefix","className","children","ariaLabelledby","responsive","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","ref","modalManager","onToggle","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","handleHide","modalContext","getModalManager","current","handleContainerOverflow","handleEnter","node","args","style","visibility","handleExited","renderBackdrop","backdropProps","renderDialog","dialogProps","Provider","value","transition","backdropTransition","displayName","Object","assign","Body","Header","Title"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\r\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport * as React from 'react';\r\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport BaseModal from '@restart/ui/Modal';\r\nimport Fade from './Fade';\r\nimport OffcanvasBody from './OffcanvasBody';\r\nimport OffcanvasToggling from './OffcanvasToggling';\r\nimport ModalContext from './ModalContext';\r\nimport NavbarContext from './NavbarContext';\r\nimport OffcanvasHeader from './OffcanvasHeader';\r\nimport OffcanvasTitle from './OffcanvasTitle';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  show: false,\r\n  backdrop: true,\r\n  keyboard: true,\r\n  scroll: false,\r\n  autoFocus: true,\r\n  enforceFocus: true,\r\n  restoreFocus: true,\r\n  placement: 'start',\r\n  renderStaticNode: false\r\n};\r\nfunction DialogTransition(props) {\r\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\r\n    ...props\r\n  });\r\n}\r\nfunction BackdropTransition(props) {\r\n  return /*#__PURE__*/_jsx(Fade, {\r\n    ...props\r\n  });\r\n}\r\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  children,\r\n  'aria-labelledby': ariaLabelledby,\r\n  placement,\r\n  responsive,\r\n  /* BaseModal props */\r\n\r\n  show,\r\n  backdrop,\r\n  keyboard,\r\n  scroll,\r\n  onEscapeKeyDown,\r\n  onShow,\r\n  onHide,\r\n  container,\r\n  autoFocus,\r\n  enforceFocus,\r\n  restoreFocus,\r\n  restoreFocusOptions,\r\n  onEntered,\r\n  onExit,\r\n  onExiting,\r\n  onEnter,\r\n  onEntering,\r\n  onExited,\r\n  backdropClassName,\r\n  manager: propsManager,\r\n  renderStaticNode,\r\n  ...props\r\n}, ref) => {\r\n  const modalManager = useRef();\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\r\n  const {\r\n    onToggle\r\n  } = useContext(NavbarContext) || {};\r\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\r\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\r\n  useEffect(() => {\r\n    // Handles the case where screen is resized while the responsive\r\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\r\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\r\n  }, [show, responsive, hideResponsiveOffcanvas]);\r\n  const handleHide = useEventCallback(() => {\r\n    onToggle == null ? void 0 : onToggle();\r\n    onHide == null ? void 0 : onHide();\r\n  });\r\n  const modalContext = useMemo(() => ({\r\n    onHide: handleHide\r\n  }), [handleHide]);\r\n  function getModalManager() {\r\n    if (propsManager) return propsManager;\r\n    if (scroll) {\r\n      // Have to use a different modal manager since the shared\r\n      // one handles overflow.\r\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\r\n        handleContainerOverflow: false\r\n      });\r\n      return modalManager.current;\r\n    }\r\n    return getSharedManager();\r\n  }\r\n  const handleEnter = (node, ...args) => {\r\n    if (node) node.style.visibility = 'visible';\r\n    onEnter == null ? void 0 : onEnter(node, ...args);\r\n  };\r\n  const handleExited = (node, ...args) => {\r\n    if (node) node.style.visibility = '';\r\n    onExited == null ? void 0 : onExited(...args);\r\n  };\r\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\r\n    ...backdropProps,\r\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\r\n  }), [backdropClassName, bsPrefix]);\r\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\r\n    ...dialogProps,\r\n    ...props,\r\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\r\n    \"aria-labelledby\": ariaLabelledby,\r\n    children: children\r\n  });\r\n  return /*#__PURE__*/_jsxs(_Fragment, {\r\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\r\n      value: modalContext,\r\n      children: /*#__PURE__*/_jsx(BaseModal, {\r\n        show: showOffcanvas,\r\n        ref: ref,\r\n        backdrop: backdrop,\r\n        container: container,\r\n        keyboard: keyboard,\r\n        autoFocus: autoFocus,\r\n        enforceFocus: enforceFocus && !scroll,\r\n        restoreFocus: restoreFocus,\r\n        restoreFocusOptions: restoreFocusOptions,\r\n        onEscapeKeyDown: onEscapeKeyDown,\r\n        onShow: onShow,\r\n        onHide: handleHide,\r\n        onEnter: handleEnter,\r\n        onEntering: onEntering,\r\n        onEntered: onEntered,\r\n        onExit: onExit,\r\n        onExiting: onExiting,\r\n        onExited: handleExited,\r\n        manager: getModalManager(),\r\n        transition: DialogTransition,\r\n        backdropTransition: BackdropTransition,\r\n        renderBackdrop: renderBackdrop,\r\n        renderDialog: renderDialog\r\n      })\r\n    })]\r\n  });\r\n});\r\nOffcanvas.displayName = 'Offcanvas';\r\nOffcanvas.defaultProps = defaultProps;\r\nexport default Object.assign(Offcanvas, {\r\n  Body: OffcanvasBody,\r\n  Header: OffcanvasHeader,\r\n  Title: OffcanvasTitle\r\n});"]},"metadata":{},"sourceType":"module"}