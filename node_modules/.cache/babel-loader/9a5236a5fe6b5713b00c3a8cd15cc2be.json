{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport getInitialPopperStyles from './getInitialPopperStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  arrowProps,\n  hasDoneInitialMeasure,\n  popper,\n  show,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  let computedStyle = style;\n\n  if (show && !hasDoneInitialMeasure) {\n    computedStyle = { ...style,\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\n    };\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: computedStyle,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","map":{"version":3,"sources":["C:/Users/Samsung/OneDrive/Documentos/GitHub/Site-EngComp/node_modules/react-bootstrap/esm/Tooltip.js"],"names":["classNames","React","useBootstrapPrefix","useIsRTL","getOverlayDirection","getInitialPopperStyles","jsx","_jsx","jsxs","_jsxs","defaultProps","placement","Tooltip","forwardRef","bsPrefix","className","style","children","arrowProps","hasDoneInitialMeasure","popper","show","props","ref","isRTL","primaryPlacement","split","bsDirection","computedStyle","strategy","role","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,QAA7B,QAA6C,iBAA7C;AACA,SAASC,mBAAT,QAAoC,WAApC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAGA,MAAMC,OAAO,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,CAAC;AAC7CC,EAAAA,QAD6C;AAE7CH,EAAAA,SAF6C;AAG7CI,EAAAA,SAH6C;AAI7CC,EAAAA,KAJ6C;AAK7CC,EAAAA,QAL6C;AAM7CC,EAAAA,UAN6C;AAO7CC,EAAAA,qBAP6C;AAQ7CC,EAAAA,MAR6C;AAS7CC,EAAAA,IAT6C;AAU7C,KAAGC;AAV0C,CAAD,EAW3CC,GAX2C,KAWnC;AACTT,EAAAA,QAAQ,GAAGZ,kBAAkB,CAACY,QAAD,EAAW,SAAX,CAA7B;AACA,QAAMU,KAAK,GAAGrB,QAAQ,EAAtB;AACA,QAAM,CAACsB,gBAAD,IAAqB,CAACd,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,CAACe,KAAV,CAAgB,GAAhB,CAA9B,KAAuD,EAAlF;AACA,QAAMC,WAAW,GAAGvB,mBAAmB,CAACqB,gBAAD,EAAmBD,KAAnB,CAAvC;AACA,MAAII,aAAa,GAAGZ,KAApB;;AACA,MAAIK,IAAI,IAAI,CAACF,qBAAb,EAAoC;AAClCS,IAAAA,aAAa,GAAG,EACd,GAAGZ,KADW;AAEd,SAAGX,sBAAsB,CAACe,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,CAACS,QAAlC;AAFX,KAAhB;AAID;;AACD,SAAO,aAAapB,KAAK,CAAC,KAAD,EAAQ;AAC/Bc,IAAAA,GAAG,EAAEA,GAD0B;AAE/BP,IAAAA,KAAK,EAAEY,aAFwB;AAG/BE,IAAAA,IAAI,EAAE,SAHyB;AAI/B,mBAAeL,gBAJgB;AAK/BV,IAAAA,SAAS,EAAEf,UAAU,CAACe,SAAD,EAAYD,QAAZ,EAAuB,cAAaa,WAAY,EAAhD,CALU;AAM/B,OAAGL,KAN4B;AAO/BL,IAAAA,QAAQ,EAAE,CAAC,aAAaV,IAAI,CAAC,KAAD,EAAQ;AAClCQ,MAAAA,SAAS,EAAE,eADuB;AAElC,SAAGG;AAF+B,KAAR,CAAlB,EAGN,aAAaX,IAAI,CAAC,KAAD,EAAQ;AAC3BQ,MAAAA,SAAS,EAAG,GAAED,QAAS,QADI;AAE3BG,MAAAA,QAAQ,EAAEA;AAFiB,KAAR,CAHX;AAPqB,GAAR,CAAzB;AAeD,CAtC4B,CAA7B;AAuCAL,OAAO,CAACF,YAAR,GAAuBA,YAAvB;AACAE,OAAO,CAACmB,WAAR,GAAsB,SAAtB;AACA,eAAenB,OAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport getInitialPopperStyles from './getInitialPopperStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  arrowProps,\n  hasDoneInitialMeasure,\n  popper,\n  show,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  let computedStyle = style;\n  if (show && !hasDoneInitialMeasure) {\n    computedStyle = {\n      ...style,\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\n    };\n  }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: computedStyle,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}