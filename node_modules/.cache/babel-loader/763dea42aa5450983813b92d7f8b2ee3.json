{"ast":null,"code":"import _slicedToArray from \"C:/Users/Jo\\xE3o Marcelo/Documents/GitHub/Site-EngComp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { renderTransition } from './ImperativeTransition';\n/**\r\n * Built on top of `Popper.js`, the overlay component is\r\n * great for custom tooltip overlays.\r\n */\n\nvar Overlay = /*#__PURE__*/React.forwardRef(function (props, outerRef) {\n  var flip = props.flip,\n      offset = props.offset,\n      placement = props.placement,\n      containerPadding = props.containerPadding,\n      _props$popperConfig = props.popperConfig,\n      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\n      Transition = props.transition,\n      runTransition = props.runTransition;\n\n  var _useCallbackRef = useCallbackRef(),\n      _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),\n      rootElement = _useCallbackRef2[0],\n      attachRef = _useCallbackRef2[1];\n\n  var _useCallbackRef3 = useCallbackRef(),\n      _useCallbackRef4 = _slicedToArray(_useCallbackRef3, 2),\n      arrowElement = _useCallbackRef4[0],\n      attachArrowRef = _useCallbackRef4[1];\n\n  var mergedRef = useMergedRefs(attachRef, outerRef);\n  var container = useWaitForDOMRef(props.container);\n  var target = useWaitForDOMRef(props.target);\n\n  var _useState = useState(!props.show),\n      _useState2 = _slicedToArray(_useState, 2),\n      exited = _useState2[0],\n      setExited = _useState2[1];\n\n  var popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip: flip,\n    offset: offset,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  })); // TODO: I think this needs to be in an effect\n\n  if (props.show && exited) {\n    setExited(false);\n  }\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited.apply(props, arguments);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  var mountOverlay = props.show || !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  var onExit = props.onExit,\n      onExiting = props.onExiting,\n      onEnter = props.onEnter,\n      onEntering = props.onEntering,\n      onEntered = props.onEntered;\n  var child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper: popper,\n    placement: placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n  child = renderTransition(Transition, runTransition, {\n    in: !!props.show,\n    appear: true,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: child,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: handleHidden,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered\n  });\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","map":{"version":3,"sources":["C:/Users/JoÃ£o Marcelo/Documents/GitHub/Site-EngComp/node_modules/@restart/ui/esm/Overlay.js"],"names":["React","ReactDOM","useCallbackRef","useMergedRefs","useState","usePopper","useRootClose","useWaitForDOMRef","mergeOptionsWithPopperConfig","renderTransition","Overlay","forwardRef","props","outerRef","flip","offset","placement","containerPadding","popperConfig","Transition","transition","runTransition","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","container","target","show","exited","setExited","popper","enableEvents","handleHidden","onExited","mountOverlay","onHide","disabled","rootClose","rootCloseDisabled","clickTrigger","rootCloseEvent","onExit","onExiting","onEnter","onEntering","onEntered","child","children","Object","assign","attributes","style","styles","ref","arrowProps","arrow","in","appear","mountOnEnter","unmountOnExit","createPortal","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\r\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport { useState } from 'react';\r\nimport usePopper from './usePopper';\r\nimport useRootClose from './useRootClose';\r\nimport useWaitForDOMRef from './useWaitForDOMRef';\r\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\r\nimport { renderTransition } from './ImperativeTransition';\r\n/**\r\n * Built on top of `Popper.js`, the overlay component is\r\n * great for custom tooltip overlays.\r\n */\r\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\r\n  const {\r\n    flip,\r\n    offset,\r\n    placement,\r\n    containerPadding,\r\n    popperConfig = {},\r\n    transition: Transition,\r\n    runTransition\r\n  } = props;\r\n  const [rootElement, attachRef] = useCallbackRef();\r\n  const [arrowElement, attachArrowRef] = useCallbackRef();\r\n  const mergedRef = useMergedRefs(attachRef, outerRef);\r\n  const container = useWaitForDOMRef(props.container);\r\n  const target = useWaitForDOMRef(props.target);\r\n  const [exited, setExited] = useState(!props.show);\r\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\r\n    placement,\r\n    enableEvents: !!props.show,\r\n    containerPadding: containerPadding || 5,\r\n    flip,\r\n    offset,\r\n    arrowElement,\r\n    popperConfig\r\n  }));\r\n\r\n  // TODO: I think this needs to be in an effect\r\n  if (props.show && exited) {\r\n    setExited(false);\r\n  }\r\n  const handleHidden = (...args) => {\r\n    setExited(true);\r\n    if (props.onExited) {\r\n      props.onExited(...args);\r\n    }\r\n  };\r\n\r\n  // Don't un-render the overlay while it's transitioning out.\r\n  const mountOverlay = props.show || !exited;\r\n  useRootClose(rootElement, props.onHide, {\r\n    disabled: !props.rootClose || props.rootCloseDisabled,\r\n    clickTrigger: props.rootCloseEvent\r\n  });\r\n  if (!mountOverlay) {\r\n    // Don't bother showing anything if we don't have to.\r\n    return null;\r\n  }\r\n  const {\r\n    onExit,\r\n    onExiting,\r\n    onEnter,\r\n    onEntering,\r\n    onEntered\r\n  } = props;\r\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\r\n    style: popper.styles.popper,\r\n    ref: mergedRef\r\n  }), {\r\n    popper,\r\n    placement,\r\n    show: !!props.show,\r\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\r\n      style: popper.styles.arrow,\r\n      ref: attachArrowRef\r\n    })\r\n  });\r\n  child = renderTransition(Transition, runTransition, {\r\n    in: !!props.show,\r\n    appear: true,\r\n    mountOnEnter: true,\r\n    unmountOnExit: true,\r\n    children: child,\r\n    onExit,\r\n    onExiting,\r\n    onExited: handleHidden,\r\n    onEnter,\r\n    onEntering,\r\n    onEntered\r\n  });\r\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\r\n});\r\nOverlay.displayName = 'Overlay';\r\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}