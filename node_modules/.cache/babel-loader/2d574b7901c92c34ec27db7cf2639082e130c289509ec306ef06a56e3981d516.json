{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o Marcelo\\\\Documents\\\\GitHub\\\\Site-EngComp\\\\src\\\\pages\\\\Login\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const location = useLocation();\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem(\"token\") !== null);\n  const [userImage, setUserImage] = useState('');\n\n  // ... código existente para fazer o login\n\n  useEffect(() => {\n    // ... código existente\n\n    if (isUserObject(userObject)) {\n      var _userObject$email;\n      setUser(userObject);\n      if ((_userObject$email = userObject.email) !== null && _userObject$email !== void 0 && _userObject$email.endsWith(\"@usp.br\")) {\n        // Armazene as informações do usuário no localStorage\n        localStorage.setItem(\"user\", JSON.stringify(userObject));\n        localStorage.setItem(\"token\", \"userObject\");\n\n        // Atualize o estado da barra de navegação\n        setIsLoggedIn(true);\n        setUserImage(userObject.picture || '');\n        if (redirectTo) {\n          window.location.href = redirectTo;\n        } else {\n          window.location.href = \"/\";\n        }\n      } else {\n        setErrorMessage(\"Tente novamente com um e-mail USP.\");\n      }\n    }\n\n    // ... código existente\n  }, [isLoggedIn, redirectTo]);\n  const handleSignout = () => {\n    // Resto do código para fazer logout\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"LM4GPbaG3JFWEDR1kHaDKv7glhg=\", false, function () {\n  return [useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Login","_s","location","isLoggedIn","setIsLoggedIn","localStorage","getItem","userImage","setUserImage","isUserObject","userObject","_userObject$email","setUser","email","endsWith","setItem","JSON","stringify","picture","redirectTo","window","href","setErrorMessage","handleSignout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/João Marcelo/Documents/GitHub/Site-EngComp/src/pages/Login/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Login: React.FC = () => {\r\n  const location = useLocation();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(\r\n    localStorage.getItem(\"token\") !== null\r\n  );\r\n  const [userImage, setUserImage] = useState('');\r\n\r\n  // ... código existente para fazer o login\r\n\r\n  useEffect(() => {\r\n    // ... código existente\r\n\r\n    if (isUserObject(userObject)) {\r\n      setUser(userObject);\r\n\r\n      if (userObject.email?.endsWith(\"@usp.br\")) {\r\n        // Armazene as informações do usuário no localStorage\r\n        localStorage.setItem(\"user\", JSON.stringify(userObject));\r\n        localStorage.setItem(\"token\", \"userObject\");\r\n\r\n        // Atualize o estado da barra de navegação\r\n        setIsLoggedIn(true);\r\n        setUserImage(userObject.picture || '');\r\n\r\n        if (redirectTo) {\r\n          window.location.href = redirectTo;\r\n        } else {\r\n          window.location.href = \"/\";\r\n        }\r\n      } else {\r\n        setErrorMessage(\"Tente novamente com um e-mail USP.\");\r\n      }\r\n    }\r\n\r\n    // ... código existente\r\n  }, [isLoggedIn, redirectTo]);\r\n\r\n  const handleSignout = () => {\r\n    // Resto do código para fazer logout\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ... seu código existente para a página de login */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAC1CS,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IACpC,CAAC;EACD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;;EAEAD,SAAS,CAAC,MAAM;IACd;;IAEA,IAAIc,YAAY,CAACC,UAAU,CAAC,EAAE;MAAA,IAAAC,iBAAA;MAC5BC,OAAO,CAACF,UAAU,CAAC;MAEnB,KAAAC,iBAAA,GAAID,UAAU,CAACG,KAAK,cAAAF,iBAAA,eAAhBA,iBAAA,CAAkBG,QAAQ,CAAC,SAAS,CAAC,EAAE;QACzC;QACAT,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU,CAAC,CAAC;QACxDL,YAAY,CAACU,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;;QAE3C;QACAX,aAAa,CAAC,IAAI,CAAC;QACnBI,YAAY,CAACE,UAAU,CAACQ,OAAO,IAAI,EAAE,CAAC;QAEtC,IAAIC,UAAU,EAAE;UACdC,MAAM,CAAClB,QAAQ,CAACmB,IAAI,GAAGF,UAAU;QACnC,CAAC,MAAM;UACLC,MAAM,CAAClB,QAAQ,CAACmB,IAAI,GAAG,GAAG;QAC5B;MACF,CAAC,MAAM;QACLC,eAAe,CAAC,oCAAoC,CAAC;MACvD;IACF;;IAEA;EACF,CAAC,EAAE,CAACnB,UAAU,EAAEgB,UAAU,CAAC,CAAC;EAE5B,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1B;EAAA,CACD;EAED,oBACExB,OAAA;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9CID,KAAe;EAAA,QACFH,WAAW;AAAA;AAAA+B,EAAA,GADxB5B,KAAe;AAgDrB,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}